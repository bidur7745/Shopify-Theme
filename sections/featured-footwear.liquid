{% comment %}
  Featured Footwear Section with Color Options
  Displays footwear products from selected collection with dynamic color swatches
{% endcomment %}
{{ 'featured-footwear.css' | asset_url | stylesheet_tag }}
<script src="{{ 'featured-footwear.js' | asset_url }}" type="text/javascript"></script>

<div id="featured-footwear-{{ section.id }}" class="featured-footwear-section" style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;">
  <div class="container">
    {% if section.settings.heading != blank %}
      <div class="section-header">
        <h2 class="section-title">{{ section.settings.heading }}</h2>
        {% if section.settings.subheading != blank %}
          <p class="section-subtitle">{{ section.settings.subheading }}</p>
        {% endif %}
      </div>
    {% endif %}

    {% assign selected_collection = collections[section.settings.collection] %}
    {% if selected_collection and selected_collection.products_count > 0 %}
      <div class="footwear-grid">
        {% for product in selected_collection.products limit: section.settings.products_to_show %}
          {% comment %} Determine which option is the Color option {% endcomment %}
          {% assign color_option_index = nil %}
          {% for opt in product.options_with_values %}
            {% assign opt_name = opt.name | downcase %}
            {% if opt_name contains 'color' or opt_name contains 'colour' %}
              {% assign color_option_index = forloop.index0 %}
            {% endif %}
          {% endfor %}
          {% if color_option_index == nil %}
            {% assign color_option_index = 0 %}
          {% endif %}

          {% comment %} Build unique color list with a representative variant per color (ignoring size variants) {% endcomment %}
          {% assign seen_colors = '' | split: ',' %}
          {% assign color_variants = '' | split: ',' %}
          {% assign color_to_variant_map = '' | split: ',' %}
          
          {% comment %} First pass: collect all unique colors {% endcomment %}
          {% for v in product.variants %}
            {% assign color_value = v.options[color_option_index] | default: 'Default' %}
            {% unless seen_colors contains color_value %}
              {% assign seen_colors = seen_colors | push: color_value %}
            {% endunless %}
          {% endfor %}
          
          {% comment %} Second pass: find first variant for each color {% endcomment %}
          {% for color in seen_colors %}
            {% for v in product.variants %}
              {% assign variant_color = v.options[color_option_index] | default: 'Default' %}
              {% if variant_color == color %}
                {% capture cv %}{"id":{{ v.id }},"color":"{{ color | escape }}","image":"{{ v.featured_image | img_url: '400x400' | default: product.featured_image | img_url: '400x400' }}"}{% endcapture %}
                {% assign color_variants = color_variants | push: cv %}
                {% break %}
              {% endif %}
            {% endfor %}
          {% endfor %}

          <div class="footwear-card card-minimal">
            <div class="footwear-image-container">
              <a href="{{ product.url }}" class="footwear-image-link">
                <img 
                  class="footwear-main-image" 
                  src="{{ product.featured_image | img_url: '400x400' }}" 
                  alt="{{ product.featured_image.alt | default: product.title }}"
                  loading="lazy"
                >
              </a>
            </div>

            <div class="footwear-info">
              <h3 class="footwear-title">
                <a href="{{ product.url }}">{{ product.title }}</a>
              </h3>
              
              <div class="footwear-price">
                {% if product.compare_at_price > product.price %}
                  <span class="price-sale">{{ product.price | money }}</span>
                  <span class="price-compare">{{ product.compare_at_price | money }}</span>
                {% else %}
                  <span class="price-regular">{{ product.price | money }}</span>
                {% endif %}
              </div>

              {% comment %} Color swatches under price (solid dots) {% endcomment %}
              <div class="color-swatches color-swatches-inline" style="display: flex !important; opacity: 1 !important; visibility: visible !important;">
                {% comment %} Debug information {% endcomment %}
                {% if color_variants.size == 0 %}
                  <div style="color: red; font-size: 10px;">No color variants found</div>
                {% endif %}
                
                {% for color in seen_colors %}
                  {% for v in product.variants %}
                    {% assign variant_color = v.options[color_option_index] | default: 'Default' %}
                    {% if variant_color == color %}
                      <button 
                        class="color-swatch {% if forloop.index == 1 and forloop.parentloop.index == 1 %}active{% endif %}"
                        data-variant-id="{{ v.id }}"
                        data-image-url="{{ v.featured_image | img_url: '400x400' | default: product.featured_image | img_url: '400x400' }}"
                        data-product-id="{{ product.id }}"
                        title="{{ color }}"
                        aria-label="Select {{ color }} color"
                        style="background-color: {% if color == 'Black' %}#000000{% elsif color == 'White' %}#FFFFFF{% elsif color == 'Red' %}#FF0000{% elsif color == 'Blue' %}#0000FF{% elsif color == 'Green' %}#008000{% elsif color == 'Yellow' %}#FFFF00{% elsif color == 'Brown' %}#A52A2A{% elsif color == 'Orange' %}#FFA500{% elsif color == 'Purple' %}#800080{% elsif color == 'Pink' %}#FFC0CB{% elsif color == 'Gray' or color == 'Grey' %}#808080{% else %}#CDAA7D{% endif %}; display: block !important; opacity: 1 !important; visibility: visible !important;"
                      >
                        <span class="color-name">{{ color }}</span>
                      </button>
                      {% break %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
                </div>

              <form action="/cart/add" method="post" enctype="multipart/form-data" class="footwear-form">
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                <input type="hidden" name="quantity" value="1">
                <button 
                  type="submit" 
                  class="footwear-add-to-cart"
                  {% unless product.available %}disabled{% endunless %}
                >
                  {% if product.available %}
                    Add to Cart
                  {% else %}
                    Sold Out
                  {% endif %}
                </button>
              </form>
            </div>
          </div>
        {% endfor %}
      </div>
    {% else %}
      <div class="footwear-empty-state">
        {% if section.settings.collection == blank %}
          <p>Please select a collection in the theme customizer.</p>
        {% elsif selected_collection == blank %}
          <p>Collection not found. Please check the collection selection.</p>
        {% else %}
          <p>No products found in the selected collection.</p>
        {% endif %}
      </div>
    {% endif %}

    {% if section.settings.button_text != blank and section.settings.button_url != blank %}
      <div class="section-footer">
        <a href="{{ section.settings.button_url }}" class="section-button">
          {{ section.settings.button_text }}
        </a>
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Featured Footwear",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Footwear"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "Discover our latest collection of premium footwear with multiple color options"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
      "info": "Select a collection to display products from"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 1,
      "max": 8,
      "step": 1,
      "label": "Number of products to show",
      "default": 2
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "View All Footwear"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "Button URL"
    },
    {
      "type": "header",
      "content": "Section Settings"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Featured Footwear",
      "settings": {
        "heading": "Featured Footwear",
        "subheading": "Discover our latest collection of premium footwear with multiple color options",
        "products_to_show": 2,
        "button_text": "View All Footwear"
      }
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const section = document.getElementById('featured-footwear-{{ section.id }}');
    if (section) {
      // Wait a moment to ensure the FeaturedFootwear class is loaded
      setTimeout(function() {
        try {
          if (typeof FeaturedFootwear === 'function') {
            const footwear = new FeaturedFootwear(section);
            console.log('FeaturedFootwear initialized for section {{ section.id }}');
            const swatches = section.querySelectorAll('.color-swatch');
            console.log('Total color swatches found: ' + swatches.length);
          } else {
            console.error('FeaturedFootwear class not loaded yet');
          }
        } catch (e) {
          console.error('Error initializing FeaturedFootwear:', e);
        }
      }, 500); // 500ms delay to ensure script is loaded
    }
  });
</script>